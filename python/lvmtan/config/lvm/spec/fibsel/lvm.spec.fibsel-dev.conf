
# dumpMoConParams.py --CONFIG=lvm/spec/fibsel/lvm.spec.fibsel-dev.conf --TYPE=\"linear\ stage\" --VENDOR=PI --PRODUCT=Wheel --ENCODER.TYPE=0 --MODULE=W1 --V=1   --FILENAME=lvm.spec.fibsel_datasheet.conf


LOAD                                  = [NAME=lvm.spec.fibsel-dev, LIB=BasdaMoccaMpiaNDevice]
MOD.W1.CFG.CONNECTION.ADDRESS          = tcp://192.168.2.12:4000                                     # connection address: tcp://HOST:PORT or tty:/dev/ttyS0:9600:8:no
MOD.W1.CFG.CONNECTION.CARD             = 1                                                           # the used MoCon card
MOD.W1.CFG.CONNECTION.MODULE           = 6                                                           # the used MoCon module
MOD.W1.CFG.CONNECTION.TIMEOUT:Time     = 00:00:03.000000      +UNIT=hour                             # its the time how long the service should wait for a normal command response like ACK (this timeout is blocking the service but the MoCon sends the ACK immediately)
MOD.W1.CFG.CONNECTION.EVENT_TIMEOUT:Time = 00:00:00.500000    +UNIT=hour                             # its the time how long the service should wait for a event message (Pay attention: this timeout blocks the service while it is waiting for an event which might not send immediately)
MOD.W1.CFG.DATASHEET.CONFIG           = lvm/common/PI_WHEEL_datasheet.conf


CFG.ONEWAY:Bool      = 0
CFG.FULLTURN = 17600  +UNIT=steps  +LABEL="FULLTURN"

#
# the switch width is the distance where the reference signals are returned
#

CFG.SWITCHWIDTH = 60

#
# switch depth is the bit depth of the reference switches
#

#CFG.SWITCHDEPTH = 8
#CFG.SWITCHMASK = 0b11111000:8

# device configuration parameter to define which position value should be periodically updated
# default: 0 MoCon internal software Encoder
#          1 incremental Encoder
#          2 absolute Encoder
#          3 MoCon internal software Encoder + incremental Encoder
#          4 MoCon internal software Encoder + absolute Encoder
#          5 incremental Encoder + absolute Encoder
#          6 MoCon internal software Encoder + incremental Encoder + absolute Encoder
CFG.POSITION.AUTOUPDATE:Int          = 0

# device configuration parameter to define which position value should be returned by
# getPosition or displayed in the GUI
# default: 0 MoCon internal software Encoder
#          1 incremental Encoder
#          2 absolute Encoder
CFG.POSITION.REPORT:Int              = 0

# device configuration parameter to define in which unit the position value should be returned. The value is the index of the CFG.TRANS
CFG.POSITION.UNIT                = STEPS

#
# device configuration parameter
#
# Depending on how many named position you like to have add here the properties with the positions values and the labels.
# The labels are used to display them in the GUI. The position values are the absolute target positions of the motor in steps.
# The property of the named position needs to be numbered serially.
#

CFG.NAMED_POS.ABS.0:Double           = 1466.66666666              +LABEL=["FWheel"]   +NAME="30 deg"
CFG.NAMED_POS.ABS.1:Double           = 2933.33333333              +LABEL=["FWheel"]   +NAME="60 deg"
CFG.NAMED_POS.ABS.2:Double           = 4400.0                     +LABEL=["FWheel"]   +NAME="90 deg"
CFG.NAMED_POS.ABS.3:Double           = 5866.66666666              +LABEL=["FWheel"]   +NAME="120 deg"
CFG.NAMED_POS.ABS.4:Double           = 7333.33333333              +LABEL=["FWheel"]   +NAME="180 deg"
CFG.NAMED_POS.ABS.5:Double           = 10266.6666667              +LABEL=["FWheel"]   +NAME="210 deg"
CFG.NAMED_POS.ABS.6:Double           = 11733.3333333              +LABEL=["FWheel"]   +NAME="240 deg"
CFG.NAMED_POS.ABS.7:Double           = 13200                      +LABEL=["FWheel"]   +NAME="270 deg"
CFG.NAMED_POS.ABS.8:Double           = 14666.6666667              +LABEL=["FWheel"]   +NAME="300 deg"
CFG.NAMED_POS.ABS.8:Double           = 16133.3333333              +LABEL=["FWheel"]   +NAME="330 deg"




#
# This is the named position for relative movements. It can be used in engineering mode in order to move the motor to a relative position several times.
# without to edit the target position permanently.
#

CFG.NAMED_POS.REL.0           = 48.8888888889                 +LABEL=["FWheel"]   +NAME="Rel. 0"



#
# It follows the definition of the coordination transformation
# from the focal plane in the motor coordinate system.
# It is also used to convert to different units.
CFG.TRANS.STEPS:Point                     = [1, 0]               +LABEL=["Scale", "Offset"] +PREC=0  # m11, dx - scale X, offset x
CFG.TRANS.DEG:Point                     = [48.888888888888, 0]              +LABEL=["Scale", "Offset"] +PREC=2     # m11, dx - scale X, offset x
